<?php

class A {
	const FOO = 1;
}

class B extends A {
	const FOO = 'foo';
}

class C extends B {
	const FOO = true;
}

class D {
	public function bar(B $b) {
		return $b::FOO;
	}
}
-----
Block#1
    Stmt_Class
        name: LITERAL<string>('A')
        stmts: Block#2
    Stmt_Class
        name: LITERAL<string>('B')
        extends: LITERAL<string>('A')
        stmts: Block#3
    Stmt_Class
        name: LITERAL<string>('C')
        extends: LITERAL<string>('B')
        stmts: Block#4
    Stmt_Class
        name: LITERAL<string>('D')
        stmts: Block#5
    Terminal_Return
        expr: LITERAL<int>(1)

Block#2
    Terminal_Const
        name: LITERAL<string>('FOO')
        value: LITERAL<int>(1)
        valueBlock: Block#6

Block#3
    Terminal_Const
        name: LITERAL<string>('FOO')
        value: LITERAL<string>('foo')
        valueBlock: Block#7

Block#4
    Terminal_Const
        name: LITERAL<string>('FOO')
        value: LITERAL<bool>(true)
        valueBlock: Block#8

Block#5
    Stmt_ClassMethod<bar>

Block#6

Block#7

Block#8

Function D::bar():
Block#1
    Expr_Param
        name: LITERAL('b')
        result: Var<B>#1<$b>
    Expr_ClassConstFetch
        class: Var<B>#1<$b>
        name: LITERAL<string>('FOO')
        result: Var<bool|string>#2
    Terminal_Return
        expr: Var<bool|string>#2